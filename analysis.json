{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "An element that renders the UI to create a HTTP request.\n\nIt produces the following values (as element's properties):\n\n- url - the request URL\n- method - HTTP method\n- headers - HTTP headers string\n- payload - Request body. It can be either String,\n[File](https://developer.mozilla.org/en-US/docs/Web/API/File),\n([Blob](https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob)), or\n[FormData](https://developer.mozilla.org/en-US/docs/Web/API/FormData).\n- requestActions - List of request actions as defined in\n`request-actions-panel` element.\n- responseActions - List of response actions as defined in\n`request-actions-panel` element.\n- queryModel - Model for query parameters\n- headersModel - Model for headers value (not yet implemented)\n\n## Variables\n\nOutput of abt of this properties can contain a variables in format `${varName}`.\nUse\n[variables-evaluator](https://github.com/advanced-rest-client/variables-evaluator)\nto evaluate variables to the final output.\n\nThis element works with\n[variables-manager](https://github.com/advanced-rest-client/variables-manager)\nthat stores variables in the local datastore. It should be placed anywhere\nin the DOM. The elements uses browser's events system to communicate.\n\n## Events retargeting\n\nThe editors listens to varous events related to the request state. By default\nall of the editors listens on a window object. To limit this, set `eventsTarget`\non this element to point an element that will be used as events target.\nThis way it is possible to enclose the request panel in a \"tab\".\n\nThe `eventsTarget` property is propagated to the editors.\n\nEvent fired by this or any of the editors will not stop on the `eventsTarget`\nelement and you are responsible to cancel them if nescesary.\n\n## Accessing request data\n\nYou can access request data by either accessing corresponding property of the\nelement, by listening for `property-changed` event or by listening for\n`request-data-changed` custom event.\n\nOnly the last one bubbles through the DOM.\n\n### Example\n\n```html\n<request-editor\n url=\"{{requestUrl}}\"\n on-headers-changed=\"_headersChangedEvent\"></request-editor>\n```\n\nor\n\n```javascript\ndocument.body.addEventListener('request-data-changed', (e) => {\n console.log(e.detail);\n});\n```\n\n## Authorization panel\n\nAuthorization panel renders methods to authorize the user.\nDetailed documentation for authorization is at\nhttps://github.com/advanced-rest-client/authorization-panel\n\nTo make OAuth2 work properly set `oauth2RedirectUri` property to application\nredirect URI. User should set this value in in provider's settings.\n\n## Request and response actions\n\nRequest actions allows to (re)set variables before the request is made.\nResponse actions allows to perform a user defined action when the response is ready.\nMore information can be found here:\nhttps://github.com/advanced-rest-client/request-actions-panel\n\n### Styling\n\n`<request-editor>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--request-editor` | Mixin applied to the element | `{}`\n`--request-editor-url-editor` | Mixin applied to a line with the URL editor | `{}`\n`--arc-font-subhead` | Theme mixin, applied to the section name title | `{}`\n`--action-button` | Theme mixin, applied to the acction buttons | `{}`\n`--request-editor-context-menu-icon-color` | Color of an icon in the context\nmenu | `--primary-color`\n`--request-editor-context-menu-icon` | Mixin applied to an icon in the\ncontext menu | `{}`\n`--request-editor-main-action-buttons` | Mixin applied to the action buttons\nnext to the URL editor | `{}`\n`--request-editor-url-input-editor` | Mixin applied to the URL editor | `{}`\n`--request-editor-method-selector` | Mixin applied to the methos selector in\nnarrow view | `{}`\n`--request-editor-method-selector-mini` | Mixin applied to the methos selector\nin wide view | `{}`\n`--request-editor-context-menu` | Mixin applied to the main action context\n menu dropdown | `{}`\n`--request-editor-context-menu-dropdown` | Mixin applied to the main action\ncontext menu dropdown container | `{}`\n`--request-editor-main-action-button` | Mixin applied to the send / abort\nbuttons | `{}`\n`--request-editor-tabs-container` | Mixin applied to the headers and body\neditors container | `{}`\n`--request-editor-tab-selected` | Mixin applied to selected tab | `{}`\n\nTo style edtors use variables defined in the following elements:\n- [url-input-editor](https://github.com/advanced-rest-client/url-input-editor)\n- [headers-editor](https://github.com/advanced-rest-client/headers-editor)\n- [http-method-selector](https://github.com/advanced-rest-client/http-method-selector)\n- [payload-editor](https://github.com/advanced-rest-client/payload-editor)\n- [variables-editor](https://github.com/advanced-rest-client/variables-editor)\n\nAlso paper elements: `paper-button`, `paper-tab`, and `paper-tabs`",
      "summary": "",
      "path": "request-editor.html",
      "properties": [
        {
          "name": "eventsTarget",
          "type": "Object | null | undefined",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_eventsTargetChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_oldEventsTarget",
          "type": "Object | null | undefined",
          "description": "An event target used to attach listeners.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 78,
              "column": 8
            },
            "end": {
              "line": 78,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "selectedTab",
          "type": "number | null | undefined",
          "description": "Selected request tab.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 339,
              "column": 8
            },
            "end": {
              "line": 343,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_refreshPayload\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "contentType",
          "type": "string | null | undefined",
          "description": "Current content type.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 345,
              "column": 8
            },
            "end": {
              "line": 348,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "isPayload",
          "type": "boolean | null | undefined",
          "description": "Computed value if the method can carry a payload",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 350,
              "column": 8
            },
            "end": {
              "line": 354,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_isPayloadChanged\"",
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "headers",
          "type": "string | null | undefined",
          "description": "Headers for the request.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 356,
              "column": 8
            },
            "end": {
              "line": 360,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"notifyRequestChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "payload",
          "type": "string | null | undefined",
          "description": "Body for the request",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 362,
              "column": 8
            },
            "end": {
              "line": 366,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"notifyRequestChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "url",
          "type": "string | null | undefined",
          "description": "Current URL",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 368,
              "column": 8
            },
            "end": {
              "line": 372,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"notifyRequestChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "method",
          "type": "string | null | undefined",
          "description": "Current HTTP method",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 374,
              "column": 8
            },
            "end": {
              "line": 378,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"notifyRequestChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "queryModel",
          "type": "Array | null | undefined",
          "description": "Query parameters model generated by the URL editor.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 380,
              "column": 8
            },
            "end": {
              "line": 383,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "responseActions",
          "type": "Array | null | undefined",
          "description": "List of request actions to be performed when the response is received",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 387,
              "column": 8
            },
            "end": {
              "line": 391,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"notifyRequestChanged\"",
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "requestActions",
          "type": "Array | null | undefined",
          "description": "List of request actions to be performed before request is send",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 395,
              "column": 8
            },
            "end": {
              "line": 399,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"notifyRequestChanged\"",
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "narrow",
          "type": "boolean | null | undefined",
          "description": "If set it will renders the view in the narrow layout.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 403,
              "column": 8
            },
            "end": {
              "line": 403,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "narrowWidth",
          "type": "string | null | undefined",
          "description": "A widith below which the `narrow` property will be set to true.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 405,
              "column": 8
            },
            "end": {
              "line": 408,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"768px\""
        },
        {
          "name": "urlInvalid",
          "type": "boolean | null | undefined",
          "description": "Computed value when the URL change.\nIf not valid form submission won't be possible.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 413,
              "column": 8
            },
            "end": {
              "line": 416,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "noUrlEditor",
          "type": "boolean | null | undefined",
          "description": "Removes the URL editor from the DOM.\nIt will also cause that the `url` property will be empty and\non events fired by this element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 422,
              "column": 8
            },
            "end": {
              "line": 426,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_noUrlEditorChanged\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "loadingRequest",
          "type": "boolean | null | undefined",
          "description": "When set it will display the UI to indicate that the request is being\nsend.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 431,
              "column": 8
            },
            "end": {
              "line": 434,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "collapseOpened",
          "type": "boolean | null | undefined",
          "description": "True if the editor panel is opened",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 436,
              "column": 8
            },
            "end": {
              "line": 439,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "oauth2RedirectUri",
          "type": "string | null | undefined",
          "description": "Redirect URL for the OAuth2 authorization.\nIf can be also set by dispatching `oauth2-redirect-url-changed`\nwith `value` property on the `detail` object.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 445,
              "column": 8
            },
            "end": {
              "line": 445,
              "column": 33
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "xhrExtension",
          "type": "boolean | null | undefined",
          "description": "If set then it renders an option in request context menu to\ntoggle to XHR request via the extension.\nIt's only relevant to ARC Chrome app.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 451,
              "column": 8
            },
            "end": {
              "line": 451,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_useXhrExtension",
          "type": "boolean | null | undefined",
          "description": "Current state of XHR toggle button",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 455,
              "column": 8
            },
            "end": {
              "line": 458,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_useXhrExtensionChanged\"",
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "requestId",
          "type": "string | null | undefined",
          "description": "Generated request ID when the request is sent. This value is reported\nin send and abort events",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 463,
              "column": 8
            },
            "end": {
              "line": 463,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "authSettings",
          "type": "Object | null | undefined",
          "description": "Current authorization panel settings.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 465,
              "column": 8
            },
            "end": {
              "line": 468,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 84,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 86,
              "column": 5
            },
            "end": {
              "line": 91,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_eventsTargetChanged",
          "description": "Removes old handlers (if any) and attaches listeners on new event\nevent target.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 105,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventsTarget",
              "type": "?Node",
              "description": "Event target to set handlers on. If not set it\nwill set handlers on the `window` object."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_attachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 478,
              "column": 4
            },
            "end": {
              "line": 481,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_detachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 483,
              "column": 4
            },
            "end": {
              "line": 486,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "toggle",
          "description": "Toggles body panel.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 489,
              "column": 4
            },
            "end": {
              "line": 491,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "notifyRequestChanged",
          "description": "Called each time if any of `method`, `url`, 'payload' or `headers` filed\nchange. Fires the `request-data-changed` custom event with current values\nof the request.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 497,
              "column": 4
            },
            "end": {
              "line": 505,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "serializeRequest",
          "description": "Serializes current request data into an object.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 518,
              "column": 4
            },
            "end": {
              "line": 530,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Object",
            "desc": "Request data object with the following keys:\n- url (can be empty)\n- method (can be empty)\n- headers (can be empty)\n- payload (can be undefined)\n- auth (can be undefined)\n- actions (can be undefined)\n- queryModel (Array)"
          }
        },
        {
          "name": "_computeToggleIconClass",
          "description": "Computes class for the toggle's button icon.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 532,
              "column": 4
            },
            "end": {
              "line": 538,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opened"
            }
          ]
        },
        {
          "name": "_computeToggleLabel",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 540,
              "column": 4
            },
            "end": {
              "line": 542,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opened"
            }
          ]
        },
        {
          "name": "_isPayloadChanged",
          "description": "Handles change to `isPayload` property. Restores payload editor tab\nif needed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 547,
              "column": 4
            },
            "end": {
              "line": 552,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isPayload"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_refreshPayload",
          "description": "Called when the selected tab changes. Refreshes payload editor state\n(for code mirror) if currently selected.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 557,
              "column": 4
            },
            "end": {
              "line": 561,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedTab"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_sendRequestInner",
          "description": "Handles an event dispatched by eny of the child elements.\nIt cancels the even and stops it's propagation and the sends the request",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 566,
              "column": 4
            },
            "end": {
              "line": 573,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_sendRequest",
          "description": "Sends the `send-request` custom event to send the request.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 577,
              "column": 4
            },
            "end": {
              "line": 587,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_abortRequest",
          "description": "Sends the `abort-request` custom event to cancel the request.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 591,
              "column": 4
            },
            "end": {
              "line": 601,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_noUrlEditorChanged",
          "description": "Clears the URL value if the URL editor is removed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 605,
              "column": 4
            },
            "end": {
              "line": 609,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_unselectRequestMenu",
          "description": "Deselects menu item if the URL editor is present.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 613,
              "column": 4
            },
            "end": {
              "line": 619,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "toggleXhr",
          "description": "Toggles state of the use XHR extension toggle button.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 623,
              "column": 4
            },
            "end": {
              "line": 633,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_useXhrExtensionChanged",
          "description": "Fires the `request-use-xhr-changed` custom event to inform about\ntoggle button status change.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 638,
              "column": 4
            },
            "end": {
              "line": 649,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "saveRequestState",
          "description": "Fires cancelable `request-save-state` custom event so the application\ncan save the request object.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 654,
              "column": 4
            },
            "end": {
              "line": 661,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "clearRequest",
          "description": "Clears the request properties and sends cancelable `request-clear-state`\ncustom event.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 666,
              "column": 4
            },
            "end": {
              "line": 681,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_authRedirectChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 683,
              "column": 4
            },
            "end": {
              "line": 685,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 333,
          "column": 2
        },
        "end": {
          "line": 745,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.RequestEditor",
      "attributes": [
        {
          "name": "events-target",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "selected-tab",
          "description": "Selected request tab.",
          "sourceRange": {
            "start": {
              "line": 339,
              "column": 8
            },
            "end": {
              "line": 343,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "content-type",
          "description": "Current content type.",
          "sourceRange": {
            "start": {
              "line": 345,
              "column": 8
            },
            "end": {
              "line": 348,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "is-payload",
          "description": "Computed value if the method can carry a payload",
          "sourceRange": {
            "start": {
              "line": 350,
              "column": 8
            },
            "end": {
              "line": 354,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "headers",
          "description": "Headers for the request.",
          "sourceRange": {
            "start": {
              "line": 356,
              "column": 8
            },
            "end": {
              "line": 360,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "payload",
          "description": "Body for the request",
          "sourceRange": {
            "start": {
              "line": 362,
              "column": 8
            },
            "end": {
              "line": 366,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "url",
          "description": "Current URL",
          "sourceRange": {
            "start": {
              "line": 368,
              "column": 8
            },
            "end": {
              "line": 372,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "method",
          "description": "Current HTTP method",
          "sourceRange": {
            "start": {
              "line": 374,
              "column": 8
            },
            "end": {
              "line": 378,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "query-model",
          "description": "Query parameters model generated by the URL editor.",
          "sourceRange": {
            "start": {
              "line": 380,
              "column": 8
            },
            "end": {
              "line": 383,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "response-actions",
          "description": "List of request actions to be performed when the response is received",
          "sourceRange": {
            "start": {
              "line": 387,
              "column": 8
            },
            "end": {
              "line": 391,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "request-actions",
          "description": "List of request actions to be performed before request is send",
          "sourceRange": {
            "start": {
              "line": 395,
              "column": 8
            },
            "end": {
              "line": 399,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "narrow",
          "description": "If set it will renders the view in the narrow layout.",
          "sourceRange": {
            "start": {
              "line": 403,
              "column": 8
            },
            "end": {
              "line": 403,
              "column": 23
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "narrow-width",
          "description": "A widith below which the `narrow` property will be set to true.",
          "sourceRange": {
            "start": {
              "line": 405,
              "column": 8
            },
            "end": {
              "line": 408,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "url-invalid",
          "description": "Computed value when the URL change.\nIf not valid form submission won't be possible.",
          "sourceRange": {
            "start": {
              "line": 413,
              "column": 8
            },
            "end": {
              "line": 416,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "no-url-editor",
          "description": "Removes the URL editor from the DOM.\nIt will also cause that the `url` property will be empty and\non events fired by this element.",
          "sourceRange": {
            "start": {
              "line": 422,
              "column": 8
            },
            "end": {
              "line": 426,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "loading-request",
          "description": "When set it will display the UI to indicate that the request is being\nsend.",
          "sourceRange": {
            "start": {
              "line": 431,
              "column": 8
            },
            "end": {
              "line": 434,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "collapse-opened",
          "description": "True if the editor panel is opened",
          "sourceRange": {
            "start": {
              "line": 436,
              "column": 8
            },
            "end": {
              "line": 439,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "oauth2-redirect-uri",
          "description": "Redirect URL for the OAuth2 authorization.\nIf can be also set by dispatching `oauth2-redirect-url-changed`\nwith `value` property on the `detail` object.",
          "sourceRange": {
            "start": {
              "line": 445,
              "column": 8
            },
            "end": {
              "line": 445,
              "column": 33
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "xhr-extension",
          "description": "If set then it renders an option in request context menu to\ntoggle to XHR request via the extension.\nIt's only relevant to ARC Chrome app.",
          "sourceRange": {
            "start": {
              "line": 451,
              "column": 8
            },
            "end": {
              "line": 451,
              "column": 29
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "request-id",
          "description": "Generated request ID when the request is sent. This value is reported\nin send and abort events",
          "sourceRange": {
            "start": {
              "line": 463,
              "column": 8
            },
            "end": {
              "line": 463,
              "column": 25
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "auth-settings",
          "description": "Current authorization panel settings.",
          "sourceRange": {
            "start": {
              "line": 465,
              "column": 8
            },
            "end": {
              "line": 468,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "abort-request",
          "description": "Fired when the user request to abort current request.\n\nThis event can be cancelled.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "request-clear-state",
          "description": "Fired when clear request state option has been selected from the menu.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "request-data-changed",
          "description": "Event fired when any part of the request data change.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "request-save-state",
          "description": "Fired when the save action has been requested in the UI.\nThis event is cancelable.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "request-use-xhr-changed",
          "description": "Fired when the state of the toggle XHR button change.\nIt is fired to inform request controlling element to switch to the XHR\nextension.\n`xhrExtension` must be set to display the toggle button.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "send-request",
          "description": "Fired when the user request to send current request.\n\nThis event can be cancelled.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "content-type-changed",
          "description": "Fired when the `contentType` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "is-payload-changed",
          "description": "Fired when the `isPayload` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "headers-changed",
          "description": "Fired when the `headers` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "payload-changed",
          "description": "Fired when the `payload` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "url-changed",
          "description": "Fired when the `url` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "method-changed",
          "description": "Fired when the `method` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "query-model-changed",
          "description": "Fired when the `queryModel` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "response-actions-changed",
          "description": "Fired when the `responseActions` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "request-actions-changed",
          "description": "Fired when the `requestActions` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "url-invalid-changed",
          "description": "Fired when the `urlInvalid` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "auth-settings-changed",
          "description": "Fired when the `authSettings` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "request-editor",
      "mixins": [
        "ArcBehaviors.EventsTargetBehavior"
      ]
    }
  ]
}
