{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "An element that renders the UI to create a HTTP request.\n\nIt produces the following values (as element's properties):\n\n- url - the request URL\n- method - HTTP method\n- headers - HTTP headers string\n- payload - Request body. It can be either String,\n[File](https://developer.mozilla.org/en-US/docs/Web/API/File),\n([Blob](https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob)), or\n[FormData](https://developer.mozilla.org/en-US/docs/Web/API/FormData).\n- requestActions - List of request actions as defined in\n`request-actions-panel` element.\n- responseActions - List of response actions as defined in\n`request-actions-panel` element.\n- headersModel - Model for headers value (not yet implemented)\n\n## Variables\n\nOutput of abt of this properties can contain a variables in format `${varName}`.\nUse\n[variables-evaluator](https://github.com/advanced-rest-client/variables-evaluator)\nto evaluate variables to the final output.\n\nThis element works with\n[variables-manager](https://github.com/advanced-rest-client/variables-manager)\nthat stores variables in the local datastore. It should be placed anywhere\nin the DOM. The elements uses browser's events system to communicate.\n\nNote, as of version 2.0 this component does not include editor for variables.\nVariables are not part of the request and therefore are included into request\neditor. The app should place `variables-editor` somewhere.\n\n## Events retargeting\n\nThe editors listens to varous events related to the request state. By default\nall of the editors listens on a window object. To limit this, set `eventsTarget`\non this element to point an element that will be used as events target.\nThis way it is possible to enclose the request panel in a \"tab\".\n\nThe `eventsTarget` property is propagated to the editors.\n\nEvent fired by this or any of the editors will not stop on the `eventsTarget`\nelement and you are responsible to cancel them if nescesary.\n\n## Accessing request data\n\nYou can access request data by either accessing corresponding property of the\nelement, by listening for `property-changed` event or by listening for\n`request-data-changed` custom event.\n\nOnly the last one bubbles through the DOM.\n\n### Example\n\n```html\n<request-editor\n url=\"{{requestUrl}}\"\n on-headers-changed=\"_headersChangedEvent\"></request-editor>\n```\n\nor\n\n```javascript\ndocument.body.addEventListener('request-data-changed', (e) => {\n console.log(e.detail);\n});\n```\n\n## Authorization panel\n\nAuthorization panel renders methods to authorize the user.\nDetailed documentation for authorization is at\nhttps://github.com/advanced-rest-client/authorization-panel\n\nTo make OAuth2 work properly set `oauth2RedirectUri` property to application\nredirect URI. User should set this value in in provider's settings.\n\n## Request and response actions\n\nRequest actions allows to (re)set variables before the request is made.\nResponse actions allows to perform a user defined action when the response is ready.\nMore information can be found here:\nhttps://github.com/advanced-rest-client/request-actions-panel\n\n### Styling\n\n`<request-editor>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--request-editor` | Mixin applied to the element | `{}`\n`--request-editor-url-editor` | Mixin applied to a line with the URL editor | `{}`\n`--arc-font-subhead` | Theme mixin, applied to the section name title | `{}`\n`--action-button` | Theme mixin, applied to the acction buttons | `{}`\n`--request-editor-context-menu-icon-color` | Color of an icon in the context\nmenu | `--primary-color`\n`--request-editor-context-menu-icon` | Mixin applied to an icon in the\ncontext menu | `{}`\n`--request-editor-main-action-buttons` | Mixin applied to the action buttons\nnext to the URL editor | `{}`\n`--request-editor-url-input-editor` | Mixin applied to the URL editor | `{}`\n`--request-editor-method-selector` | Mixin applied to the methos selector in\nnarrow view | `{}`\n`--request-editor-method-selector-mini` | Mixin applied to the methos selector\nin wide view | `{}`\n`--request-editor-context-menu` | Mixin applied to the main action context\n menu dropdown | `{}`\n`--request-editor-context-menu-dropdown` | Mixin applied to the main action\ncontext menu dropdown container | `{}`\n`--request-editor-main-action-button` | Mixin applied to the send / abort\nbuttons | `{}`\n`--request-editor-tabs-container` | Mixin applied to the headers and body\neditors container | `{}`\n`--request-editor-tab-selected` | Mixin applied to selected tab | `{}`\n`--request-editor-url-line-color` | Color of the URL section | ``\n`--request-editor-context-menu-color` | Color of the context menu | ``\n`--context-menu-item-color` | Color of the context menu item | ``\n`--context-menu-item-background-color` | Background color of the context menu item | ``\n`--context-menu-item-color-hover` | Color of the context menu item when hovered | ``\n`--context-menu-item-background-color-hover` | Background color of the context menu item when hovered | ``\n\nTo style edtors use variables defined in the following elements:\n- [url-input-editor](https://github.com/advanced-rest-client/url-input-editor)\n- [headers-editor](https://github.com/advanced-rest-client/headers-editor)\n- [http-method-selector](https://github.com/advanced-rest-client/http-method-selector)\n- [payload-editor](https://github.com/advanced-rest-client/payload-editor)\n- [variables-editor](https://github.com/advanced-rest-client/variables-editor)\n\nAlso paper elements: `paper-button`, `paper-tab`, and `paper-tabs`",
      "summary": "",
      "path": "request-editor.js",
      "properties": [
        {
          "name": "selectedTab",
          "type": "number | null | undefined",
          "description": "Selected request tab.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 451,
              "column": 6
            },
            "end": {
              "line": 455,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_refreshEditors\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "contentType",
          "type": "string | null | undefined",
          "description": "Current content type.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 457,
              "column": 6
            },
            "end": {
              "line": 460,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "isPayload",
          "type": "boolean | null | undefined",
          "description": "Computed value if the method can carry a payload",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 462,
              "column": 6
            },
            "end": {
              "line": 466,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_isPayloadChanged\"",
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "headers",
          "type": "string | null | undefined",
          "description": "Headers for the request.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 468,
              "column": 6
            },
            "end": {
              "line": 472,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"notifyRequestChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "payload",
          "type": "string | null | undefined",
          "description": "Body for the request",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 474,
              "column": 6
            },
            "end": {
              "line": 478,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"notifyRequestChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "url",
          "type": "string | null | undefined",
          "description": "Current URL",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 480,
              "column": 6
            },
            "end": {
              "line": 484,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"notifyRequestChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "method",
          "type": "string | null | undefined",
          "description": "Current HTTP method",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 486,
              "column": 6
            },
            "end": {
              "line": 490,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"notifyRequestChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "responseActions",
          "type": "Array | null | undefined",
          "description": "List of request actions to be performed when the response is received",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 494,
              "column": 6
            },
            "end": {
              "line": 498,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"notifyRequestChanged\"",
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "requestActions",
          "type": "Array | null | undefined",
          "description": "List of request actions to be performed before request is send",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 502,
              "column": 6
            },
            "end": {
              "line": 506,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"notifyRequestChanged\"",
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "narrow",
          "type": "boolean | null | undefined",
          "description": "If set it renders the view in the narrow layout.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 510,
              "column": 6
            },
            "end": {
              "line": 510,
              "column": 43
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "urlInvalid",
          "type": "boolean | null | undefined",
          "description": "Computed value when the URL change.\nIf not valid form submission won't be possible.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 515,
              "column": 6
            },
            "end": {
              "line": 518,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "noUrlEditor",
          "type": "boolean | null | undefined",
          "description": "Removes the URL editor from the DOM.\nIt will also cause that the `url` property will be empty and\non events fired by this element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 524,
              "column": 6
            },
            "end": {
              "line": 528,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_noUrlEditorChanged\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "loadingRequest",
          "type": "boolean | null | undefined",
          "description": "When set it will display the UI to indicate that the request is being\nsend.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 533,
              "column": 6
            },
            "end": {
              "line": 536,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "collapseOpened",
          "type": "boolean | null | undefined",
          "description": "True if the editor panel is opened",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 538,
              "column": 6
            },
            "end": {
              "line": 541,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "oauth2RedirectUri",
          "type": "string | null | undefined",
          "description": "Redirect URL for the OAuth2 authorization.\nIf can be also set by dispatching `oauth2-redirect-url-changed`\nwith `value` property on the `detail` object.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 547,
              "column": 6
            },
            "end": {
              "line": 547,
              "column": 31
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "requestId",
          "type": "string | null | undefined",
          "description": "Generated request ID when the request is sent. This value is reported\nin send and abort events",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 552,
              "column": 6
            },
            "end": {
              "line": 552,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "authSettings",
          "type": "Object | null | undefined",
          "description": "Current authorization panel settings.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 554,
              "column": 6
            },
            "end": {
              "line": 558,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"notifyRequestChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "When set the editor is in read only mode.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 562,
              "column": 6
            },
            "end": {
              "line": 562,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "urlOpened",
          "type": "boolean | null | undefined",
          "description": "Set to open URL detailed editor.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 566,
              "column": 6
            },
            "end": {
              "line": 566,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "state",
          "type": "Object",
          "description": "Current state of the editor that can be later used to restore\nthe satte. This does not count for request data. It only shows\nstate of the UI regions.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 573,
              "column": 6
            },
            "end": {
              "line": 577,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_stateChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "ignoreContentOnGet",
          "type": "Boolean",
          "description": "When set it will ignore all `content-*` headers when the request method\nis either `GET` or `HEAD`.\nWhen not set or `false` it renders warning dialog.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 584,
              "column": 6
            },
            "end": {
              "line": 584,
              "column": 33
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 600,
              "column": 2
            },
            "end": {
              "line": 604,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_detachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 606,
              "column": 2
            },
            "end": {
              "line": 610,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "toggle",
          "description": "Toggles body panel.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 615,
              "column": 2
            },
            "end": {
              "line": 618,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dispatch",
          "description": "Dispatches bubbling and composed custom event.\nBy default the event is cancelable until `cancelable` property is set to false.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 628,
              "column": 2
            },
            "end": {
              "line": 640,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Event type"
            },
            {
              "name": "detail",
              "type": "?any",
              "description": "A detail to set"
            },
            {
              "name": "cancelable",
              "type": "?Boolean",
              "description": "When false the event is not cancelable."
            }
          ],
          "return": {
            "type": "CustomEvent"
          }
        },
        {
          "name": "_sendGaEvent",
          "description": "Sends usage google analytics event",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 647,
              "column": 2
            },
            "end": {
              "line": 654,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "action",
              "type": "String",
              "description": "Action description"
            },
            {
              "name": "label",
              "type": "String",
              "description": "Event label"
            }
          ],
          "return": {
            "type": "CustomEvent"
          }
        },
        {
          "name": "notifyRequestChanged",
          "description": "Called each time if any of `method`, `url`, 'payload' or `headers` filed\nchange. Fires the `request-data-changed` custom event with current values\nof the request.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 660,
              "column": 2
            },
            "end": {
              "line": 663,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "serializeRequest",
          "description": "Serializes current request data into an object.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 676,
              "column": 2
            },
            "end": {
              "line": 691,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Object",
            "desc": "Request data object with the following keys:\n- url (can be empty)\n- method (can be empty)\n- headers (can be empty)\n- payload (can be undefined)\n- auth (can be undefined)\n- actions (can be undefined)\n- queryModel (Array)"
          }
        },
        {
          "name": "_getHeaders",
          "description": "Returns headers value.\nIf `ignoreContentOnGet` flag is set and request is `get` then it clears\nall `content-*` headers.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 699,
              "column": 2
            },
            "end": {
              "line": 706,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method",
              "type": "String",
              "description": "Current HTTP method name."
            }
          ],
          "return": {
            "type": "String",
            "desc": "HTTP headers string to use with request."
          }
        },
        {
          "name": "_computeToggleIconClass",
          "description": "Computes class for the toggle's button icon.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 712,
              "column": 2
            },
            "end": {
              "line": 718,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opened",
              "type": "Boolean",
              "description": "Collapse opened state"
            }
          ],
          "return": {
            "type": "String",
            "desc": "CSS class name"
          }
        },
        {
          "name": "_computeToggleLabel",
          "description": "Computes title attribute for panel toggle icon.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 724,
              "column": 2
            },
            "end": {
              "line": 726,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opened",
              "type": "Boolean",
              "description": "Collapse opened state"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Label value"
          }
        },
        {
          "name": "_isPayloadChanged",
          "description": "Handles change to `isPayload` property. Restores payload editor tab\nif needed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 733,
              "column": 2
            },
            "end": {
              "line": 738,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isPayload",
              "type": "Boolean"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "notifyResize",
          "description": "Calls `notifyResize()` on `paper-tabs` and on currently selected panel\nif any is selected.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 743,
              "column": 2
            },
            "end": {
              "line": 752,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_refreshEditors",
          "description": "Called when the selected tab changes. Refreshes payload and headers editor\nstate (code mirror) if currently selected.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 760,
              "column": 2
            },
            "end": {
              "line": 773,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedTab",
              "type": "Number"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_sendRequestInner",
          "description": "Handles an event dispatched by eny of the child elements.\nIt cancels the even and stops it's propagation and the sends the request",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 780,
              "column": 2
            },
            "end": {
              "line": 787,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "send",
          "description": "Dispatches the `api-request` custom event to send the request.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 794,
              "column": 2
            },
            "end": {
              "line": 805,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opts",
              "type": "Object",
              "description": "Send oiptions:\n- ignoreValidation (Boolean) - Ignores headers validation"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_sendIgnoreValidation",
          "description": "Handler for the dialog confirmation button click.\nResends the request and skips validation.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 810,
              "column": 2
            },
            "end": {
              "line": 814,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "abort",
          "description": "Sends the `abort-api-request` custom event to cancel the request.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 818,
              "column": 2
            },
            "end": {
              "line": 824,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_noUrlEditorChanged",
          "description": "Clears the URL value if the URL editor is removed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 830,
              "column": 2
            },
            "end": {
              "line": 834,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Boolean"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_unselectRequestMenu",
          "description": "Deselects menu item if the URL editor is present.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 838,
              "column": 2
            },
            "end": {
              "line": 844,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "clearRequest",
          "description": "Clears the request properties and sends cancelable `request-clear-state`\ncustom event.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 849,
              "column": 2
            },
            "end": {
              "line": 861,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_authRedirectChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 863,
              "column": 2
            },
            "end": {
              "line": 865,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computePanelState",
          "description": "Computes and sets `state` property.\nIt is called automatically if any of the arguments change.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 873,
              "column": 2
            },
            "end": {
              "line": 882,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "collapseOpened",
              "type": "Boolean"
            },
            {
              "name": "selectedTab",
              "type": "Number"
            },
            {
              "name": "urlOpened",
              "type": "Boolean"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_stateChanged",
          "description": "Updates the editor state when `stae` changes.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 887,
              "column": 2
            },
            "end": {
              "line": 912,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "state",
              "type": "Object",
              "description": "Current state"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_requestMenuClosed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 914,
              "column": 2
            },
            "end": {
              "line": 916,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_validateContentHeaders",
          "description": "Validates headers for `Content-*` entries agains current method.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 922,
              "column": 2
            },
            "end": {
              "line": 931,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request",
              "type": "Object",
              "description": "The request object"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if headers are invalid."
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 177,
          "column": 0
        },
        "end": {
          "line": 991,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.RequestEditor",
      "attributes": [
        {
          "name": "selected-tab",
          "description": "Selected request tab.",
          "sourceRange": {
            "start": {
              "line": 451,
              "column": 6
            },
            "end": {
              "line": 455,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "content-type",
          "description": "Current content type.",
          "sourceRange": {
            "start": {
              "line": 457,
              "column": 6
            },
            "end": {
              "line": 460,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "is-payload",
          "description": "Computed value if the method can carry a payload",
          "sourceRange": {
            "start": {
              "line": 462,
              "column": 6
            },
            "end": {
              "line": 466,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "headers",
          "description": "Headers for the request.",
          "sourceRange": {
            "start": {
              "line": 468,
              "column": 6
            },
            "end": {
              "line": 472,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "payload",
          "description": "Body for the request",
          "sourceRange": {
            "start": {
              "line": 474,
              "column": 6
            },
            "end": {
              "line": 478,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "url",
          "description": "Current URL",
          "sourceRange": {
            "start": {
              "line": 480,
              "column": 6
            },
            "end": {
              "line": 484,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "method",
          "description": "Current HTTP method",
          "sourceRange": {
            "start": {
              "line": 486,
              "column": 6
            },
            "end": {
              "line": 490,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "response-actions",
          "description": "List of request actions to be performed when the response is received",
          "sourceRange": {
            "start": {
              "line": 494,
              "column": 6
            },
            "end": {
              "line": 498,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "request-actions",
          "description": "List of request actions to be performed before request is send",
          "sourceRange": {
            "start": {
              "line": 502,
              "column": 6
            },
            "end": {
              "line": 506,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "narrow",
          "description": "If set it renders the view in the narrow layout.",
          "sourceRange": {
            "start": {
              "line": 510,
              "column": 6
            },
            "end": {
              "line": 510,
              "column": 43
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "url-invalid",
          "description": "Computed value when the URL change.\nIf not valid form submission won't be possible.",
          "sourceRange": {
            "start": {
              "line": 515,
              "column": 6
            },
            "end": {
              "line": 518,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "no-url-editor",
          "description": "Removes the URL editor from the DOM.\nIt will also cause that the `url` property will be empty and\non events fired by this element.",
          "sourceRange": {
            "start": {
              "line": 524,
              "column": 6
            },
            "end": {
              "line": 528,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "loading-request",
          "description": "When set it will display the UI to indicate that the request is being\nsend.",
          "sourceRange": {
            "start": {
              "line": 533,
              "column": 6
            },
            "end": {
              "line": 536,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "collapse-opened",
          "description": "True if the editor panel is opened",
          "sourceRange": {
            "start": {
              "line": 538,
              "column": 6
            },
            "end": {
              "line": 541,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "oauth2-redirect-uri",
          "description": "Redirect URL for the OAuth2 authorization.\nIf can be also set by dispatching `oauth2-redirect-url-changed`\nwith `value` property on the `detail` object.",
          "sourceRange": {
            "start": {
              "line": 547,
              "column": 6
            },
            "end": {
              "line": 547,
              "column": 31
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "request-id",
          "description": "Generated request ID when the request is sent. This value is reported\nin send and abort events",
          "sourceRange": {
            "start": {
              "line": 552,
              "column": 6
            },
            "end": {
              "line": 552,
              "column": 23
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "auth-settings",
          "description": "Current authorization panel settings.",
          "sourceRange": {
            "start": {
              "line": 554,
              "column": 6
            },
            "end": {
              "line": 558,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "readonly",
          "description": "When set the editor is in read only mode.",
          "sourceRange": {
            "start": {
              "line": 562,
              "column": 6
            },
            "end": {
              "line": 562,
              "column": 23
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "url-opened",
          "description": "Set to open URL detailed editor.",
          "sourceRange": {
            "start": {
              "line": 566,
              "column": 6
            },
            "end": {
              "line": 566,
              "column": 24
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "state",
          "description": "Current state of the editor that can be later used to restore\nthe satte. This does not count for request data. It only shows\nstate of the UI regions.",
          "sourceRange": {
            "start": {
              "line": 573,
              "column": 6
            },
            "end": {
              "line": 577,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "ignore-content-on-get",
          "description": "When set it will ignore all `content-*` headers when the request method\nis either `GET` or `HEAD`.\nWhen not set or `false` it renders warning dialog.",
          "sourceRange": {
            "start": {
              "line": 584,
              "column": 6
            },
            "end": {
              "line": 584,
              "column": 33
            }
          },
          "metadata": {},
          "type": "Boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "abort-api-request",
          "description": "Fired when the user request to abort current request.\n\nThis event can be cancelled.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "api-request",
          "description": "Fired when the user request to send current request.\n\nThis event can be cancelled.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "request-clear-state",
          "description": "Fired when clear request state option has been selected from the menu.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "request-data-changed",
          "description": "Event fired when any part of the request data change.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "request-save-state",
          "description": "Fired when the save action has been requested in the UI.\nThis event is cancelable.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "request-use-xhr-changed",
          "description": "Fired when the state of the toggle XHR button change.\nIt is fired to inform request controlling element to switch to the XHR\nextension.\n`xhrExtension` must be set to display the toggle button.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "content-type-changed",
          "description": "Fired when the `contentType` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "is-payload-changed",
          "description": "Fired when the `isPayload` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "headers-changed",
          "description": "Fired when the `headers` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "payload-changed",
          "description": "Fired when the `payload` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "url-changed",
          "description": "Fired when the `url` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "method-changed",
          "description": "Fired when the `method` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "response-actions-changed",
          "description": "Fired when the `responseActions` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "request-actions-changed",
          "description": "Fired when the `requestActions` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "url-invalid-changed",
          "description": "Fired when the `urlInvalid` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "auth-settings-changed",
          "description": "Fired when the `authSettings` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "state-changed",
          "description": "Fired when the `state` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "request-editor",
      "mixins": [
        "EventsTargetMixin"
      ]
    }
  ]
}
